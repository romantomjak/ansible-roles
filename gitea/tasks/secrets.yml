---
# Generates Gitea secrets if necessary

- name: Get configuration file stats
  stat: path="/etc/gitea/app.ini"
  register: config_file_stat

- name: Register config file status
  set_fact:
    gitea_configuration_file_exists: "{{ config_file_stat.stat.exists }}"

- name: Read internal token
  shell: grep INTERNAL_TOKEN /etc/gitea/app.ini | awk '{print $3}'
  register: gitea_read_internal_token
  become: true
  when: gitea_configuration_file_exists

- name: Generate internal token
  shell: gitea generate secret INTERNAL_TOKEN
  register: gitea_generate_internal_token
  become: true
  when: not gitea_configuration_file_exists

- name: Read secret key
  shell: grep SECRET_KEY /etc/gitea/app.ini | awk '{print $3}'
  register: gitea_read_secret_key
  become: true
  when: gitea_configuration_file_exists

- name: Generate secret key
  shell: gitea generate secret SECRET_KEY
  register: gitea_generate_secret_key
  become: true
  when: not gitea_configuration_file_exists

- name: Read LFS JWT secret
  shell: grep LFS_JWT_SECRET /etc/gitea/app.ini | awk '{print $3}'
  register: gitea_read_lfs_jwt_secret
  become: true
  when: gitea_configuration_file_exists

- name: Generate LFS JWT secret
  shell: gitea generate secret JWT_SECRET
  register: gitea_generate_lfs_jwt_secret
  become: true
  when: not gitea_configuration_file_exists

- name: Set secret facts
  set_fact:
    gitea_internal_token: "{{ gitea_configuration_file_exists | ternary(gitea_read_internal_token.stdout, gitea_generate_internal_token.stdout) }}"
    gitea_secret_key: "{{ gitea_configuration_file_exists | ternary(gitea_read_secret_key.stdout, gitea_generate_secret_key.stdout) }}"
    gitea_lfs_jwt_secret: "{{ gitea_configuration_file_exists | ternary(gitea_read_lfs_jwt_secret.stdout, gitea_generate_lfs_jwt_secret.stdout) }}"
